AWSTemplateFormatVersion: 2010-09-09
Description: "Enhanced VPC with EC2, IAM Role, and S3 Bucket"

Resources:
  # VPC
  myVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: MyVPC

  publicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.1.0/24
      VpcId: !Ref myVPC
      MapPublicIpOnLaunch: true
      AvailabilityZone: us-east-1a
      Tags:
        - Key: Name
          Value: Public_Subnet

  privateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.5.0/24
      VpcId: !Ref myVPC
      AvailabilityZone: us-east-1a
      Tags:
        - Key: Name
          Value: Private_Subnet

  myIGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: MyIGW

  attachIGW:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref myVPC
      InternetGatewayId: !Ref myIGW

  publicRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref myVPC

  publicRoute:
    Type: AWS::EC2::Route
    DependsOn: attachIGW
    Properties:
      RouteTableId: !Ref publicRT
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref myIGW

  publicSubnetRTAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref publicSubnet
      RouteTableId: !Ref publicRT

  # IAM Role and Instance Profile
  S3ReadOnlyRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
      Tags:
        - Key: Name
          Value: S3ReadOnlyRole

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref S3ReadOnlyRole

  # EC2 Instance
  publicEC2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      SubnetId: !Ref publicSubnet
      SecurityGroupIds:
        - !Ref mySG
      ImageId: ami-0866a3c8686eaeeba  # Amazon Linux 2
      KeyName: H_Work22
      IamInstanceProfile: !Ref InstanceProfile
      Tags:
        - Key: Name
          Value: PublicEC2Instance

  mySG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Default SG rules
      VpcId: !Ref myVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  # S3 Bucket
  MyS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: s3-hwork28
      VersioningConfiguration:
        Status: Enabled

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref MyS3Bucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Deny
            Principal: "*"
            Action: "s3:*"
            Resource:
              - !Sub "arn:aws:s3:::${MyS3Bucket}/*"
            Condition:
              Bool:
                aws:SecureTransport: false

Outputs:
  publicInstanceIP:
    Description: Public IP of EC2 Instance
    Value: !GetAtt publicEC2.PublicIp

  S3BucketName:
    Description: Name of the created S3 Bucket
    Value: !Ref MyS3Bucket
